digraph "classes_geneclasses.py" {
rankdir=BT
charset="utf-8"
"genomics.modules.geneclasses.Annotation" [color="black", fontcolor="black", label="{Annotation|all_gene_ids : dict\lall_transcript_ids : dict\latypical_features : list\lbar_colors : list\lchrs : dict\lcoding_transcripts : list\lcontains_CDS_sequences : bool\lcontains_all_sequences : bool\lcontains_protein_sequences : bool\lerrors : dict\lexcluded_chromosomes : list\lfeatures : dict\lfeatures : set, list\lfeatures_r : dict\lfile : str\lgenerated_CDS_sequences : bool\lgenerated_all_sequences : bool\lgenerated_protein_sequences : bool\lgenome\lgff_header : str\lid\lkey\lliftoff : bool\lmerge : bool\lname\lnoncoding_transcripts : list\loverlap_networks : dict\loverlapped_annotations : list\lpath : str\lpromoter_types : str\lprotein_equivalences : dict\lself_overlapping : list, set\lstats : dict\ltarget : bool\lto_overlap : bool\lunmapped : list\lvalue\lvalues\lwarnings : dict\l|add_aliases(stringent: bool)\ladd_better_ab_initio_models_as_alternative_transcripts(source_priority, reliable_sources: list)\ladd_blast_hits(source, blastfile)\ladd_gene_names_and_descriptors(file_path: str, replace: bool, sep: str, just_gene_names: bool, header: bool, clear_gene_names: bool)\ladd_qualitative_info_to_overlaps()\ladd_reliable_CDS_evidence_score()\lalternative_remove_redundancy()\lcalculate_gc_content()\lcalculate_transcript_masking(hard_masked_genome: object)\lclear_gene_names()\lclear_overlaps(keep_self, keep_other)\lclear_overlaps_with_selected_CDSs()\lclear_overlaps_with_selected_exons()\lclear_sequences(just_hard, keep_proteins: bool)\lcombine_transcripts(genome: object)\lcopy()\lcorrect_gene_transcript_and_subfeature_coordinates()\ldefine_synteny(original_annotation: object)\ldetect_gene_overlaps(other: object)\ldetect_transcript_overlaps(other: object)\lexport_CDSs(only_main: bool, verbose: bool, custom_path: str)\lexport_all_features(feature_output: str, verbose: bool, path: str)\lexport_equivalences(custom_path: str, stringent: bool, verbose: bool, return_df: bool, NAs: bool, export_csv: bool, export_self: bool)\lexport_genes(verbose: bool, custom_path: str)\lexport_gff(custom_path: str, tag: str, skip_atypical_fts: bool, main_only: bool, UTRs: bool)\lexport_lengths(just_gene: bool, custom_path: str)\lexport_promoters(only_main: bool, verbose: bool, custom_path: str)\lexport_proteins(only_main: bool, verbose: bool, custom_path: str)\lexport_transcripts(only_main: bool, verbose: bool, custom_path: str)\lexport_unique_proteins(genome: object, custom_path: str)\lfind_best_gene_model(source_priority: list, just_with_reliables: bool)\lfind_best_gene_model_exon_num_overlaps(source_priority, blast: bool, exon_num: int)\lfind_best_gene_model_nested_overlaps(source_priority, blast)\lfind_motifs(query_genes: list, motif: str, motif_length, glistname, motifid, tfname, backlist: list, backlistname: str, custom_path: str)\lgene_count()\lgenerate_promoters(genome: object, promoter_size, from_ATG: bool, count_prom_size_from_TSS: bool)\lgenerate_sequences(genome: object, just_CDSs: bool)\lmake_alternative_genes_into_transcripts()\lmake_alternative_transcripts_into_genes()\lmark_abinitio_supported_genes(reliable_sources: list)\lmark_intron_nesting(ignore_removed: bool)\lmark_noisy_genes(protein_size: int, intron_size: int, remove_noncoding: bool, remove_masked: bool)\lmark_overlap_with_other_selected_CDSs()\lmark_overlap_with_other_selected_exons()\lmark_overlap_with_reliable_genes()\lmark_reliable_CDS_evidences(unreliable_sources: list)\lmark_transcriptomic_supported_genes()\lmerge_annotations(other: object, overlap_threshold: int)\loverlaps_as_networks(self_mode: bool)\lremove_CDS_overlaps(source_priority, blast: bool, anti: bool)\lremove_UTRs_from_exon_overlaps()\lremove_duplicate_transcripts()\lremove_exon_overlaps(source_priority, blast: bool)\lremove_fully_intron_nested_genes()\lremove_genes()\lremove_genes_without_names()\lremove_missing_genes_in_overlaps()\lremove_missing_transcript_parent_references()\lremove_noncoding_transcripts_from_coding_genes()\lremove_redundancy(source_priority: list, hard_masked_genome: object)\lrename_ids(minimal: bool, prefix: str, from_merge)\lrescue_longer_same_frame_CDS(reliable_sources: list)\lreturn_random_gene_ids(number: int, to_avoid: list, coding: bool)\lrework_CDSs(genome: object, low_memory: bool)\lselect_best_possible_non_overlapping_UTR(exon)\lsort_genes()\ltemporary_add_missing_properties()\lupdate(original_annotation: object, rename_ids_minimal, genome: object)\lupdate_attributes(clean: bool, featurecountsID: bool, extra_attributes: bool)\lupdate_features(standardise)\lupdate_gene_and_transcript_list()\lupdate_keys()\lupdate_stats(custom_path: str, export: bool, genome: object)\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.BlastHit" [color="black", fontcolor="black", label="{BlastHit|evalue\lscore\lsource\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.CDS" [color="black", fontcolor="black", label="{CDS|CDS_segments : list\lfive_prime_UTR_seq : str\lframe : str\lfull_UTR_exons : int\lhard_seq : str\lhard_seqs : list\lmain : bool\lprotein : NoneType\lseq : str\lseqs : list\lsize : int\lthree_prime_UTR_seq : str\l|clear_UTRs()\lclear_sequence(just_hard, keep_proteins: bool)\lequal_segments(other)\lgenerate_hard_sequence(hard_masked_genome: object, low_memory: bool)\lgenerate_protein(readthrough: str, low_memory: bool)\lgenerate_sequence(genome: object, low_memory: bool)\lupdate()\lupdate_frame()\lupdate_phase()\lupdate_size()\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.Exon" [color="black", fontcolor="black", label="{Exon|coding : bool\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.Feature" [color="black", fontcolor="black", label="{Feature|attributes : str\lch : str\ldescriptors : list\lend : int\lfeature : str\lframe : str\lgc_content : int\lhard_seq : str\lhard_seqs : tuple\lid : str\lmasked_fraction : int\lmisc_attributes : str\lnames : list\lparents : list\lphase : str\lprocesses : list\lscore : str\lseq : str\lseqs : tuple\lsize\lsource : str\lstart : int\lstrand : str\lsynonyms : list\l|almost_equal(other)\lcalculate_gc_content()\lcalculate_masking()\lclear_sequence(just_hard)\lcopy()\lequal_coordinates(other)\lgenerate_hard_sequence(hard_masked_genome: object)\lgenerate_sequence(genome: object)\llonger(other: object)\lprint_gff()\lupdate_size()\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.Gene" [color="black", fontcolor="black", label="{Gene|UTR_intron_nested : bool\labinitio_evidence : bool\laliases : list\lalternative_transcript_rescue : set\lblast_hits : list\lch_size : int\lcoding : bool\lconserved_synteny : NoneType\lintron_nested : bool\lintron_nested_fully_contained : bool\lintron_nested_single : bool\lnext_gene : NoneType\lnoncoding : bool\lold_next_gene : NoneType\lold_previous_gene : NoneType\lold_synteny_order : NoneType\loverlap_reliable : bool\loverlap_with_selected_CDS : bool\loverlap_with_selected_exon : bool\loverlaps : dict\lprevious_gene : NoneType\lpseudogene : bool\lreliable : bool\lreliable_score : int\lremove : bool\lrescue : bool\lstrand\lsynteny_order : NoneType\ltranscriptomic_evidence : bool\ltranscripts : dict\ltransposable : bool\lunrescuable : bool\l|clear_UTRs()\lcombine_transcripts(genome: object, low_memory: bool)\lcompare_blast_hits(other: object, source_priority: list)\llonger_CDS(other)\lupdate()\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.Genome" [color="black", fontcolor="black", label="{Genome|chseqs : dict\lfeatures : list\lfile : str\lname : str\lpath : str\lsize\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.Intron" [color="black", fontcolor="black", label="{Intron|boundary : str\lcanonical : bool\lcanonical_seqs : list\lhard_seq : str\lintra_coding : bool\lseq : str\lseqs : tuple\lsplice_site_acceptor : str\lsplice_site_donor : str\l|clear_sequence(just_hard)\lgenerate_sequence(genome)\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.OverlapHit" [color="black", fontcolor="black", label="{OverlapHit|CDS_query_percent\lCDS_target_percent\lCDSs_in_both\lantiscore : int\lexon_query_percent\lexon_target_percent\lexons_in_both\lfull_CDS_overlaps : int\lfull_UTR_overlaps : int\lfull_exon_overlaps : int\lfull_protein_overlaps : int\lgene_query_percent\lgene_target_percent\lid\lmin_CDS_percent : NoneType\lmin_exon_percent : NoneType\lmin_gene_percent\lmin_protein_percent\lorientation\lorigin\lprotein_query_percent\lprotein_target_percent\lquery_synteny_conserved\lscore : int\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.OverlapHitTranscript" [color="black", fontcolor="black", label="{OverlapHitTranscript|CDS_query_percent\lCDS_target_percent\lCDSs_in_both\lantiscore : int\lexon_query_percent\lexon_target_percent\lexons_in_both\lfull_CDS_overlaps : int\lfull_UTR_overlaps : int\lfull_exon_overlaps : int\lfull_protein_overlaps : int\lid\lmin_CDS_percent : NoneType\lmin_exon_percent : NoneType\lmin_overlap_percent\lmin_protein_percent\lorientation\lorigin\lparent\lprotein_query_percent\lprotein_target_percent\lquery_percent\lquery_synteny_conserved\lscore : int\lsize\lsize_CDS\lsize_protein\ltarget_percent\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.Promoter" [color="black", fontcolor="black", label="{Promoter|hard_seq : str\lseq : str\ltype\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.Protein" [color="black", fontcolor="black", label="{Protein|coding_end\lcoding_start\learly_stop\lend_stop\lgaps\lid : str\lnucleotide_surplus\lpartial : bool\lreadthrough : str\lseq\lsize\lstart\lsummary_tag : str\ltruncated : bool\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.Transcript" [color="black", fontcolor="black", label="{Transcript|CDSs : dict\lch_size : int\lcoding : bool\lcoding_end\lcoding_ratio : int\lcoding_start\lexons : list\lhard_seq : str\lhard_seqs : list\lintrons : list\lmain : bool\lmiRNAs : list\loverlaps : dict\lpolycistronic : str\lpromoter\lprotein_early_stop\lprotein_end_stop\lprotein_gaps\lprotein_nucleotide_surplus\lprotein_seq : str\lprotein_start\lseq : str\lseqs : list\lsize : int\lstrand : str\ltemp_CDSs : list\ltemp_UTRs : list\l|almost_equal(other)\lassign_UTRs()\lclear_UTRs()\lclear_sequence(just_hard)\ldetermine_main_CDS()\lexon_update()\lgenerate_CDSs()\lgenerate_CDSs_based_on_ORF(low_memory: bool)\lgenerate_UTRs()\lgenerate_best_protein(genome: object, must_have_stop: bool)\lgenerate_exons()\lgenerate_hard_sequence(hard_masked_genome: object, low_memory: bool)\lgenerate_introns()\lgenerate_promoter(promoter_size, from_ATG: bool, count_prom_size_from_TSS: bool)\lgenerate_sequence(genome: object, low_memory: bool)\lupdate()\lupdate_UTRs()\lupdate_size()\l}", shape="record", style="solid"];
"genomics.modules.geneclasses.UTR" [color="black", fontcolor="black", label="{UTR|prime : str\l|}", shape="record", style="solid"];
"genomics.modules.geneclasses.CDS" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Exon" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Gene" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Intron" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Promoter" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Transcript" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.UTR" -> "genomics.modules.geneclasses.Feature" [arrowhead="empty", arrowtail="none"];
"genomics.modules.geneclasses.Promoter" -> "genomics.modules.geneclasses.Transcript" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="promoter", style="solid"];
"genomics.modules.geneclasses.Protein" -> "genomics.modules.geneclasses.CDS" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="protein", style="solid"];
}
